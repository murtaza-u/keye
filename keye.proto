syntax = "proto3";

package pb;

option go_package = "github.com/murtaza-u/keye/internal/pb";

// Service Api consists of GET, PUT, DEL and WATCH RPC methods.
// Alongside the fundamental key/value arguments, these RPC methods can
// accept optional configuration parameters, allowing for a convenient
// and intuitive client API.
service Api {
  rpc Get(GetParams) returns (GetResponse);
  rpc Put(PutParams) returns (PutResponse);
  rpc Del(DelParams) returns (DelResponse);
  rpc Watch(WatchParams) returns (stream WatchResponse);
  rpc Stats(Delta) returns (Measures);
  rpc Backup(ChunkSize) returns (stream Chunk);
}

message KV {
  string key = 1;
  bytes val = 2;
}

message GetParams {
  string key = 1;
  optional GetOpts opts = 2;
}

message GetOpts {
  bool regex = 1;
  bool keys_only = 2;
}

message GetResponse {
  repeated KV kvs = 1;
}

message PutParams {
  string key = 1;
  bytes val = 2;
  optional PutOpts opts = 3;
}

message PutOpts {
  bool regex = 1;
}

message PutResponse {
  repeated string keys = 1;
}

message DelParams {
  string key = 1;
  optional DelOpts opts = 2;
}

message DelOpts {
  bool regex = 1;
}

message DelResponse {
  repeated string keys = 1;
}

message WatchParams {
  string key = 1;
  optional WatchOpts opts = 2;
}

message WatchOpts {
  bool regex = 1;
}

message WatchResponse {
  Event event = 1;
  KV kv = 2;
}

enum Event {
  EVENT_KEEPALIVE = 0;
  EVENT_PUT = 1;
  EVENT_DEL = 2;
}

message Delta {
  int64 duration = 1;
}

message Measures {
  TxStats TxStats = 1;
  int32 FreePageN = 2;
  int32 PendingPageN = 3;
  int32 FreeAlloc = 4;
  int32 FreelistInuse = 5;
  int32 TxN = 6;
  int32 OpenTxN = 7;
}

message TxStats {
  int64 PageCount = 1;
  int64 PageAlloc = 2;
  int64 CursorCount = 3;
  int64 NodeCount = 4;
  int64 NodeDeref = 5;
  int64 Rebalance = 6;
  int64 RebalanceTime = 7;
  int64 Split = 8;
  int64 Spill = 9;
  int64 SpillTime = 10;
  int64 Write = 11;
  int64 WriteTime = 12;
}

message Chunk {
  bytes data = 1;
  bool more = 2;
}

message ChunkSize {
  int64 size = 1;
}
